#!/bin/bash
# Auto-generated script for Kali
# Generated from: kali.md
# Mirror ID: kali

gen_tag="Generated by hust-mirrors auto script"

check() {
	# No detection rules specified for kali
	return 0
}

_kali_install_1() {
	# 替换Kali主仓库
	set_sudo

	if [ -f "/etc/apt/sources.list" ]; then
		$sudo mkdir -p "${_backup_dir}" || {
			print_error "Failed to create backup directory"
			return 1
		}
		$sudo cp "/etc/apt/sources.list" "${_backup_dir}/kali_1_1.bak" || {
			print_error "Backup /etc/apt/sources.list failed"
			return 1
		}
		$sudo sed -i -E 's|https?://([^/]+)/kali|$http://$domain/kali|g' "/etc/apt/sources.list" || {
			print_error "Failed to update /etc/apt/sources.list"
			return 1
		}
	else
		print_warning "File /etc/apt/sources.list does not exist"
	fi

	return 0
}

_kali_install_2() {
	# Execute commands
	set_sudo

	# Execute commands
	$sudo apt-get update

	return 0
}

install() {

	_kali_install_1 || return 1
	_kali_install_2 || return 1
	print_success "Mirror configuration updated successfully"
}

uninstall() {
	# Recover from backup files and execute recovery commands
	print_info "Starting recovery process..."

	# Restore files from backup
	if [ -f "${_backup_dir}/kali_1_1.bak" ]; then
		set_sudo
		$sudo cp "${_backup_dir}/kali_1_1.bak" "/etc/apt/sources.list" 2>/dev/null || true
		print_info "Restored /etc/apt/sources.list"
	fi

	print_success "Recovery completed"
}

can_recover() {
	# Check if any backup files exist
	[ -f "${_backup_dir}/kali_1_1.bak" ]
}

is_deployed() {
	# Check if any replaced file contains domain variable
	[ -f "/etc/apt/sources.list" ] && grep -q "$domain" "/etc/apt/sources.list" 2>/dev/null && return 1
	return 0
}
